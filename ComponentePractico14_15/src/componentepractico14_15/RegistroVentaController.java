/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package componentepractico14_15;

import javax.swing.DefaultComboBoxModel;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Daniel
 */
public class RegistroVentaController extends javax.swing.JFrame {

    Conector conector;
    
    /**
     * Creates new form RegistroVentaController
     */
    public RegistroVentaController() {
        initComponents();
        conector = new Conector();
        limpiarListadoClientes();
        limpiarListadoProductos();
        agregarGenerosCliente();
        actualizarListadoProductos();
        actualizarListadoClientes();
    }
    
    private void limpiarListadoProductos() {
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        listaProductosVenta.setModel(modelo);
    }
    
    private void limpiarListadoClientes() {
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        listaClientesVenta.setModel(modelo);
    }
    
    private void limpiarListaGeneros() {
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        listaGeneroCliente.setModel(modelo);
    }
    
    private void agregarGenerosCliente() {
        limpiarListaGeneros();
        String[] generos = { "M", "F" };
        DefaultComboBoxModel modelo = new DefaultComboBoxModel(generos);
        listaGeneroCliente.setModel(modelo);
        listaGeneroCliente.setSelectedIndex(-1);
    }
    
    /**
     * Consultar en la base de datos los productos y los va a asignar como elementos del combobox
     * Con la estructura CODIGO | NOMBRE
     */
    private void actualizarListadoProductos() {
        // Crear una conexion a la BD
        Connection conexion = conector.crearConexion();
        String query = "SELECT CODIGO, NOMBRE FROM PRODUCTOS ORDER BY NOMBRE";
        ResultSet productos = conector.ejecutarQuery(conexion, query);
        
        // limpiar la lista
        limpiarListadoProductos();
        
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        try {
            while(productos.next()){
                String codigo = productos.getString("CODIGO");
                String nombre = productos.getString("NOMBRE");
                modelo.addElement(codigo + " | " + nombre);
            }
            listaProductosVenta.setModel(modelo);
            
            // Prevenir que haya un elemento seleccionado por defecto en la lista
            listaProductosVenta.setSelectedIndex(-1);
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }
    
    private void actualizarListadoClientes() {
        Connection conexion = conector.crearConexion();
        String query = "SELECT ID, (NOMBRE || ' ' || APELLIDO) AS NOMBRE_COMPLETO FROM CLIENTES";
        ResultSet clientes = conector.ejecutarQuery(conexion, query);
        
        limpiarListadoClientes();
        
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        try {
            while(clientes.next()) {
                int id = clientes.getInt("ID");
                String nombre = clientes.getString("NOMBRE_COMPLETO");
                modelo.addElement(id + " | " + nombre);
            }
            listaClientesVenta.setModel(modelo);
            listaClientesVenta.setSelectedIndex(-1);
        } catch(SQLException ex) {
            System.out.println(ex.getMessage());
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        listaProductosVenta = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        listaClientesVenta = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtCantidadVenta = new javax.swing.JTextField();
        btnActualizarProductosVenta = new javax.swing.JButton();
        btnActualizarClientesVenta = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtIdentificacionCliente = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtNombreCliente = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtApellidoCliente = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        listaGeneroCliente = new javax.swing.JComboBox<>();
        btnRegistrarCliente = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Almacén el Almacén | Registro de Ventas");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Ventas | Almacén El Almacén");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Nueva Venta");

        jLabel3.setText("Producto");

        jLabel4.setText("Cliente");

        jLabel5.setText("Cantidad");

        btnActualizarProductosVenta.setText("Actualizar");
        btnActualizarProductosVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarProductosVentaActionPerformed(evt);
            }
        });

        btnActualizarClientesVenta.setText("Actualizar");
        btnActualizarClientesVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarClientesVentaActionPerformed(evt);
            }
        });

        jButton1.setText("Registrar Venta");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCantidadVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(listaProductosVenta, javax.swing.GroupLayout.Alignment.LEADING, 0, 303, Short.MAX_VALUE)
                            .addComponent(listaClientesVenta, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnActualizarProductosVenta)
                            .addComponent(btnActualizarClientesVenta)))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listaProductosVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizarProductosVenta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listaClientesVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizarClientesVenta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCantidadVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Registro de Venta", jPanel1);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Nuevo Cliente");

        jLabel7.setText("Identificación");

        jLabel8.setText("Nombre:");

        jLabel9.setText("Apellido");

        jLabel10.setText("Género");

        btnRegistrarCliente.setText("Registrar Cliente");
        btnRegistrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
                        .addGap(10, 10, 10))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnRegistrarCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtApellidoCliente, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtNombreCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtIdentificacionCliente, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(listaGeneroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIdentificacionCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtApellidoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listaGeneroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegistrarCliente)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Creación de Clientes", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTabbedPane2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnActualizarProductosVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarProductosVentaActionPerformed
        // TODO add your handling code here:
        actualizarListadoProductos();
    }//GEN-LAST:event_btnActualizarProductosVentaActionPerformed

    private void btnRegistrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarClienteActionPerformed
        // TODO add your handling code here:
        // Obtener los datos del cliente
        String identificacion = txtIdentificacionCliente.getText();
        String nombre = txtNombreCliente.getText();
        String apellido = txtApellidoCliente.getText();
        String genero = listaGeneroCliente.getSelectedItem().toString();
        
        if(!identificacion.isBlank() && !nombre.isBlank() && !apellido.isBlank() && !genero.isBlank()){
            // Registrar al cliente
            Connection conexion = conector.crearConexion();
            String sql = "INSERT INTO CLIENTES (CEDULA, NOMBRE, APELLIDO, GENERO) VALUES ('%1$s', '%2$s', '%3$s', '%4$s')";
            String query = String.format(sql, identificacion, nombre, apellido, genero);
            conector.ejecutarActualizacion(conexion, query);
            actualizarListadoClientes();
            JOptionPane.showMessageDialog(this, "Cliente registrado exitosamente");
            txtIdentificacionCliente.setText("");
            txtNombreCliente.setText("");
            txtApellidoCliente.setText("");
            listaGeneroCliente.setSelectedIndex(-1);
        } else {
            JOptionPane.showMessageDialog(this, "Por favor llenar todos los datos del cliente!");
            
            
        }
    }//GEN-LAST:event_btnRegistrarClienteActionPerformed

    private void btnActualizarClientesVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarClientesVentaActionPerformed
        // TODO add your handling code here:
        actualizarListadoClientes();
    }//GEN-LAST:event_btnActualizarClientesVentaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //Validar si todos los campos están seleccionados
        try {
            int cantidadVenta = Integer.parseInt(txtCantidadVenta.getText());
            if(listaProductosVenta.getSelectedIndex() != -1 && listaClientesVenta.getSelectedIndex() != -1 && cantidadVenta > 0) {
                // Proceder con la venta
                // WKB-987 | Teclado Inalámbrico
                String codigoProducto = listaProductosVenta.getSelectedItem().toString().split("\\|")[0].trim();
                String _idCliente = listaClientesVenta.getSelectedItem().toString().split("\\|")[0].trim();
                int idCliente = Integer.parseInt(_idCliente);
                
                // Consultar si hay suficientes cantidades para vender
                Connection conexion = conector.crearConexion();
                String sql = "SELECT CANTIDAD_BODEGA FROM PRODUCTOS WHERE CODIGO = '%1$s'";
                String query = String.format(sql, codigoProducto);
                System.out.println("Query: " + query);
                ResultSet resultado = conector.ejecutarQuery(conexion, query);
                int contador = 0;
                int cantidadActualBodega = 0;
                while(resultado.next() && contador == 0) {
                    cantidadActualBodega = resultado.getInt("CANTIDAD_BODEGA");
                    contador += 1;
                }
                if(cantidadActualBodega == 0) {
                    JOptionPane.showMessageDialog(this, "No fue posible obtener la cantidad en bodega. Intente más tarde");
                } else if (cantidadActualBodega < cantidadVenta) {
                    JOptionPane.showMessageDialog(this, "No se puede vender la cantidad solicitada, unicamente hay en stock " + cantidadActualBodega + " unidades");
                } else {
                    // Registrar Venta en Base de Datos
                    String sqlVenta = "INSERT INTO VENTAS (CLIENTE, PRODUCTO, CANTIDAD) VALUES (%1$d, '%2$s', %3$d)";
                    String queryVenta = String.format(sqlVenta, idCliente, codigoProducto, cantidadVenta);
                    conector.ejecutarActualizacion(conexion, queryVenta);
                    
                    // Actualizar la cantidad en bodega del producto vendido
                    int nuevaCantidadBodega = cantidadActualBodega - cantidadVenta;
                    String sqlActualizacionProd = "UPDATE PRODUCTOS SET CANTIDAD_BODEGA = %1$d WHERE CODIGO = '%2$s'";
                    String queryActualizacion = String.format(sqlActualizacionProd, nuevaCantidadBodega, codigoProducto);
                    conector.ejecutarActualizacion(conexion, queryActualizacion);
                    
                    JOptionPane.showMessageDialog(this, "Venta registrada exitosamente!");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Por favor seleccione producto, cliente y cantidad a vender para continuar");
            }
        } catch(NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "La cantidad debe ser un numero");
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroVentaController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroVentaController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroVentaController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroVentaController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroVentaController().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarClientesVenta;
    private javax.swing.JButton btnActualizarProductosVenta;
    private javax.swing.JButton btnRegistrarCliente;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JComboBox<String> listaClientesVenta;
    private javax.swing.JComboBox<String> listaGeneroCliente;
    private javax.swing.JComboBox<String> listaProductosVenta;
    private javax.swing.JTextField txtApellidoCliente;
    private javax.swing.JTextField txtCantidadVenta;
    private javax.swing.JTextField txtIdentificacionCliente;
    private javax.swing.JTextField txtNombreCliente;
    // End of variables declaration//GEN-END:variables
}
