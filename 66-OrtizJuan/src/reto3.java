
import java.util.Scanner;
import javax.swing.DefaultListModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Asus-PC
 */
public class reto3 extends javax.swing.JFrame {
    
    
    Paciente paciente = new Paciente();
    
    
    
   // Paciente px = new Paciente();
    Scanner scanner = new Scanner(System.in);
        int numeroPacientes=100;
        String[] nombresEnfermedades = new String[6];
        
        String[] nombresEps = new String[100];

        
        
        int cancer=0,cardiovasculares=0, respiratorias=0, cerebrovasculares=0, hipertension=0,diabetes=0;
        int[] enfermedades = new int[6];
        
        String[] salidaFinal = new String[50];
        
        String[] datos = new String[6];
        
        String Adultos[] = new String[numeroPacientes];
    /**
     * Creates new form reto3
     */
    public reto3() {
        initComponents();
       
        limpiarLista();
        limpiarSalida();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        nombreTxt = new javax.swing.JTextField();
        ciudadTxt = new javax.swing.JTextField();
        cedulaTxt = new javax.swing.JTextField();
        epsTxt = new javax.swing.JTextField();
        edadTxt = new javax.swing.JTextField();
        enfermedadTxt = new javax.swing.JTextField();
        Ingresar = new javax.swing.JButton();
        procesar = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        entrada = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        salida = new javax.swing.JList<>();

        jScrollPane3.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre");

        jLabel2.setText("Ciudad");

        jLabel3.setText("Cedula");

        jLabel4.setText("Eps");

        jLabel5.setText("Edad");

        jLabel6.setText("Enfermedad diagnosticada");

        jLabel7.setText("Datos ingresados");

        jLabel8.setText("Salidas");

        nombreTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreTxtActionPerformed(evt);
            }
        });

        Ingresar.setText("Ingresar");
        Ingresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IngresarActionPerformed(evt);
            }
        });

        procesar.setText("Procesar");
        procesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procesarActionPerformed(evt);
            }
        });

        entrada.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(entrada);

        salida.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(salida);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 225, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addGap(222, 222, 222))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(nombreTxt)
                            .addComponent(cedulaTxt)
                            .addComponent(edadTxt)
                            .addComponent(Ingresar, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
                        .addGap(84, 84, 84)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(procesar, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(enfermedadTxt)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(epsTxt)
                            .addComponent(ciudadTxt))
                        .addContainerGap(225, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ciudadTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cedulaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(epsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edadTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enfermedadTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ingresar)
                    .addComponent(procesar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    
    
    
    
    
    private void IngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IngresarActionPerformed
       String nombre = nombreTxt.getText();
        String cedula = cedulaTxt.getText();
        String edad = edadTxt.getText();
        String ciudad = ciudadTxt.getText();
        String enfermedad = enfermedadTxt.getText();
        String eps = epsTxt.getText();
        
       Paciente px = new Paciente(nombre,cedula,edad,ciudad,eps,enfermedad);
        String datosP = nombre +"-"+cedula + "-"+edad +"-"+ciudad +"-"+eps +"-"+enfermedad;
        DefaultListModel modeloLista = (DefaultListModel)entrada.getModel();
        
            // Agregar el nuevo valor
            modeloLista.addElement(datosP);
            // Actualizar los valores de la lista
            entrada.setModel(modeloLista);
            
            nombreTxt.setText("");
            cedulaTxt.setText("");
            edadTxt.setText("");
            ciudadTxt.setText("");
            enfermedadTxt.setText("");
            epsTxt.setText("");
    }//GEN-LAST:event_IngresarActionPerformed

    private void procesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procesarActionPerformed
        
        DefaultListModel modeloLista = (DefaultListModel)entrada.getModel();
        DefaultListModel modeloListaS = (DefaultListModel)salida.getModel();
        modeloLista.size();
        String linea = " ";
        String[] datos = new String[6];
        
        for(int i=0;i<modeloLista.size();i++){
        //System.out.println(i);
        linea = (String) modeloLista.elementAt(i);
        datos = linea.split("-");
        
         nombresEps[i]=datos[4];

             if(datos[5].equals("cancer")){
                 enfermedades[0]+=1;
                 
             }
             if(datos[5].equals("cardiovasculares")){
                 enfermedades[1] +=1;
             }
             if(datos[5].equals("respiratorias")){
                 enfermedades[2] +=1;
             }if(datos[5].equals("cerebrovasculares")){
                 enfermedades[3] +=1;
             }
             if(datos[5].equals("hipertension")){
                 enfermedades[4] +=1;
             }
             if(datos[5].equals("diabetes")){
                 enfermedades[5] +=1;
             
             }
             
             String edad = datos[2];
            int anios;
         anios = Integer.parseInt(edad);
        if(paciente.clasificarEdad(anios).equals("Adulto")){
            Adultos[i] = datos[0]+" "+datos[1];
        }
        
        }
         int mayorCantidad = Integer.MIN_VALUE; // Almacena el valor menor posible del vector
        int mayorPosicion = -1; // Almacena la posicion donde está el menor valor posible
        // Valor Inicial; Limite; incrementos
        for(int i=0; i < enfermedades.length; i++) {
            if(enfermedades[i] > mayorCantidad) {
                mayorCantidad= enfermedades[i];
                mayorPosicion = i;
                
            }
        }
        
        
        
         int menorCantidad = Integer.MAX_VALUE; // Almacena el valor menor posible del vector
        int menorPosicion = -1; // Almacena la posicion donde está el menor valor posible
        // Valor Inicial; Limite; incrementos
        for(int i=0; i < enfermedades.length; i++) {
            if(enfermedades[i] < menorCantidad) {
                menorCantidad = enfermedades[i];
                menorPosicion = i;
                
            }
        }
        
       
        //System.out.println("Ya se ingresaron los datos");
        modeloListaS.addElement(nombresEnfermedades[mayorPosicion]);
        modeloListaS.addElement(nombresEnfermedades[menorPosicion]);
       // System.out.println(nombresEnfermedades[mayorPosicion]);
        //System.out.println(nombresEnfermedades[menorPosicion]);
        
        
         int mayorC = Integer.MIN_VALUE; // Almacena el valor menor posible del vector
        int mayorP = -1;
         String string = "";        
        int elemento = 0;
        int repetido=0;
        for (int i = 0; i < nombresEps.length; i++) {
            int r = 0;
            for (int j = i; j < nombresEps.length; j++){
                if(nombresEps[i]!=null){
                if (nombresEps[i].equals(nombresEps[j])){
                    r++;
                }
                }
            }
            if (r > repetido && r >=3) {
                mayorP = i;
                repetido = r;
                //System.out.println(nombresEps[mayorP]);
                modeloListaS.addElement(nombresEps[mayorP]);
            }
        }
       
        
        
        
        for(int i=0;i<modeloLista.size();i++){
           if(Adultos[i] != null){
                System.out.println(Adultos[i]);
               modeloListaS.addElement(Adultos[i]);
           }
        }
        
        
        
    
        
    }//GEN-LAST:event_procesarActionPerformed

    private void nombreTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreTxtActionPerformed

    
    
     private void limpiarLista() {
         
        DefaultListModel modeloVacio = new DefaultListModel();
        entrada.setModel(modeloVacio);
        //salida.setModel(modeloVacio);
    }
     
     private void limpiarSalida(){
         DefaultListModel modeloVacio = new DefaultListModel();
        salida.setModel(modeloVacio);
     }
    
    
    
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(reto3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(reto3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(reto3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(reto3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new reto3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton Ingresar;
    private javax.swing.JTextField cedulaTxt;
    private javax.swing.JTextField ciudadTxt;
    private javax.swing.JTextField edadTxt;
    private javax.swing.JTextField enfermedadTxt;
    private javax.swing.JList<String> entrada;
    private javax.swing.JTextField epsTxt;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField nombreTxt;
    public javax.swing.JButton procesar;
    private javax.swing.JList<String> salida;
    // End of variables declaration//GEN-END:variables

    
}
