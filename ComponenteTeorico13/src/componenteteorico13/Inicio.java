/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package componenteteorico13;

import java.awt.event.KeyEvent;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Daniel
 */
public class Inicio extends javax.swing.JFrame {

    /**
     * Creates new form Inicio
     */
    public Inicio() {
        initComponents();
        // getContentPane() nos da el acceso al panel que genera Swing encima del frame
        // RGB --> Red Green Blue
        // 0 - 255
        // 000
        // RGBA --> A (transparencia)
        // Hex 
        // Negro
        // RGB = (0, 0, 0)
        // HEX = #000000
        // Blanco
        // RGB = (255, 255, 255)
        // HEX = #ffffff
        // Rojo
        // RGB = 255, 0, 0
        // HEX = #ff0000
        // getContentPane().setBackground(new java.awt.Color(0, 0, 255));
        
        limpiarLista();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        botonAgregarValor = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaValores = new javax.swing.JList<>();
        botonEliminar = new javax.swing.JButton();
        radioOpcion1 = new javax.swing.JRadioButton();
        radioOpcion2 = new javax.swing.JRadioButton();
        botonOpcion = new javax.swing.JButton();
        checkCasilla1 = new javax.swing.JCheckBox();
        checkCasilla2 = new javax.swing.JCheckBox();
        botonCasilla = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 102, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Formulario de Registro");

        jLabel2.setText("Valores:");

        txtValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorKeyPressed(evt);
            }
        });

        botonAgregarValor.setText("Agregar");
        botonAgregarValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarValorActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(listaValores);

        botonEliminar.setText("Eliminar");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        radioOpcion1.setText("Opción 1");

        radioOpcion2.setText("Opción 2");

        botonOpcion.setText("¿Qué Opción?");
        botonOpcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonOpcionActionPerformed(evt);
            }
        });

        checkCasilla1.setText("Casilla 1");

        checkCasilla2.setText("Casilla 2");

        botonCasilla.setText("¿Qué Casilla?");
        botonCasilla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCasillaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(txtValor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(botonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                            .addComponent(botonAgregarValor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioOpcion1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(radioOpcion2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkCasilla1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkCasilla2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(botonCasilla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(botonAgregarValor))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(107, 107, 107)
                                        .addComponent(botonEliminar))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radioOpcion1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioOpcion2)
                                .addGap(32, 32, 32)
                                .addComponent(checkCasilla1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(checkCasilla2))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(botonOpcion)
                        .addGap(62, 62, 62)
                        .addComponent(botonCasilla)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonAgregarValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarValorActionPerformed
        // TODO add your handling code here:
        // Obtener el texto escrito en el campo Valores
        // String valor = txtValor.getText();
        // isEmpty() ==> booleano ==> devuelve true si la longitud del string es 0
        // isBlank() ==> booleano ==> devuelve true si la longitud del string es 0 después de quitar los espacios en blanco en los extremos
        // "     ".isBlank() ==> true
        // "   Daniel   ".isBlank() ==> false
        // "".isBlank() ==> true
        // "  Hola mundo ".isBlank() ==> false
        //if(!valor.isBlank()) {
            // Limpiar espacios en los extremos
            // "  Hola mundo   ".trim() ==> "Hola mundo"
            //valor = valor.trim();
            agregarEnLista();
            // Limpiar campo de texto Valores
            //txtValor.setText("");
        //}
    }//GEN-LAST:event_botonAgregarValorActionPerformed

    private void txtValorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorKeyPressed
        // TODO add your handling code here:
        
        // Verificar si la tecla presionada es Enter
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
                agregarEnLista();
        }
    }//GEN-LAST:event_txtValorKeyPressed

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        // TODO add your handling code here:
        eliminarValoresEnLista();
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void botonOpcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonOpcionActionPerformed
        // TODO add your handling code here:
        // Verificar si la opción 1 está seleccionada
        if(radioOpcion1.isSelected()) {
            // Mostrar un mensaje en dialogo que diga que está seleccionada
            JOptionPane.showMessageDialog(this, "La opción 1 está seleccionada");
        }
        
        if(radioOpcion2.isSelected()) {
            // Mostrar un mensaje en dialogo que diga que está seleccionada
            JOptionPane.showMessageDialog(this, "La opción 2 está seleccionada");
        }
    }//GEN-LAST:event_botonOpcionActionPerformed

    private void botonCasillaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCasillaActionPerformed
        // TODO add your handling code here:
        if(checkCasilla1.isSelected()) {
            // Mostrar un mensaje en dialogo que diga que está seleccionada
            JOptionPane.showMessageDialog(this, "La casilla 1 está seleccionada");
        }
        
        if(checkCasilla2.isSelected()) {
            // Mostrar un mensaje en dialogo que diga que está seleccionada
            JOptionPane.showMessageDialog(this, "La casilla 2 está seleccionada");
        }
        
    }//GEN-LAST:event_botonCasillaActionPerformed

    // Métodos para interactuar con la lista de valores
    /**
     * Se encarga de limpiar los valores de la lista
     */
    private void limpiarLista() {
        DefaultListModel modeloVacio = new DefaultListModel();
        listaValores.setModel(modeloVacio);
    }
    
    /**
     * Agrega un valor a la lista
     * @param valor valor a agregar
     */
    private void agregarEnLista(){
        String valor = txtValor.getText().trim();
        if(!valor.isBlank()) {
            // Obtener los valores que tiene la lista actualmente
            DefaultListModel modeloLista = (DefaultListModel)listaValores.getModel();
            // Agregar el nuevo valor
            modeloLista.addElement(valor);
            // Actualizar los valores de la lista
            listaValores.setModel(modeloLista);
            txtValor.setText("");
        }
        
    }
    
    /**
     * Elimina los valores que estén seleccionados de la lista
     */
    private void eliminarValoresEnLista() {
        // Obtener los valores que tiene la lista actualmente
        DefaultListModel modeloLista = (DefaultListModel)listaValores.getModel();
        // Obtener los indices (posiciones) de los elementos seleccionados
        int[] valoresSeleccionados = listaValores.getSelectedIndices();
        if(valoresSeleccionados.length > 1) {
            for (int i = valoresSeleccionados.length - 1; i >= 0; i--) {
                // Eliminar el elemento
                modeloLista.removeElementAt(i);
            }
        } else if(valoresSeleccionados.length == 1){
            modeloLista.removeElementAt(listaValores.getSelectedIndex());
        }
        
        // Actualizar la lista
        listaValores.setModel(modeloLista);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregarValor;
    private javax.swing.JButton botonCasilla;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonOpcion;
    private javax.swing.JCheckBox checkCasilla1;
    private javax.swing.JCheckBox checkCasilla2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listaValores;
    private javax.swing.JRadioButton radioOpcion1;
    private javax.swing.JRadioButton radioOpcion2;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
